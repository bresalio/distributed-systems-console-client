<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/integration
        http://www.springframework.org/schema/integration/spring-integration-4.1.xsd
        http://www.springframework.org/schema/integration/stream
        http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
        http://www.springframework.org/schema/integration/http
        http://www.springframework.org/schema/integration/http/spring-integration-http-4.1.xsd
        ">
        
    <context:annotation-config />

	<bean id="systemProps"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" value="#{@systemProperties}" />
		<property name="targetMethod" value="putAll" />
		<property name="arguments">
			<util:properties>
				<prop key="hostAndPort">localhost:8081</prop>
				<prop key="deploymentName">distributed-systems-server</prop>
			</util:properties>
		</property>
	</bean>
	
	<bean id="main" class="app.Main" />
	
	<bean id="urlPayloadBuilder" class="gateway.UrlPayloadBuilder" />

	<int:poller default="true" fixed-delay="50" />

	<int:gateway service-interface="gateway.FilmRatingGateway"
		id="filmRatingGateway">
		<int:method name="getAllFilms" request-channel="GetAllFilmsChannel"
			request-timeout="1000" />
		<int:method name="getAllFilmsOfGenre" request-channel="GetAllFilmsOfGenreChannel"
			request-timeout="1000" />
		<int:method name="getAllFilmsOfDirector" request-channel="GetAllFilmsOfDirectorChannel"
			request-timeout="1000" />
		<int:method name="getAllFilmsOfActor" request-channel="GetAllFilmsOfActorChannel"
			request-timeout="1000" />
		<int:method name="getAllFilmsBetweenLength"
			request-channel="GetAllFilmsBetweenLengthChannel" request-timeout="1000" />
		<int:method name="getFilmData" request-channel="GetFilmDataChannel"
			request-timeout="1000" />
		<int:method name="addRating" request-channel="AddRatingChannel"
			request-timeout="1000" />
		<int:method name="getRatingsOfFilm" request-channel="GetRatingsOfFilmChannel"
			request-timeout="1000" />
		<int:method name="getAverageRatingOfFilm" request-channel="GetAverageRatingOfFilmChannel"
			request-timeout="1000" />
		<int:method name="getOmdbFilmData" request-channel="GetOmdbFilmDataChannel"
			request-timeout="1000" />
	</int:gateway>

	<int:channel id="GetAllFilmsChannel">
		<int:queue />
	</int:channel>
	<int:channel id="GetAllFilmsOfGenreChannel" />
	<int:channel id="GetAllFilmsOfDirectorChannel" />
	<int:channel id="GetAllFilmsOfActorChannel" />
	<int:channel id="GetAllFilmsBetweenLengthChannel">
		<int:queue />
	</int:channel>
	<int:channel id="GetFilmDataChannel" />
	<int:channel id="AddRatingChannel" />
	<int:channel id="GetRatingsOfFilmChannel" />
	<int:channel id="GetAverageRatingOfFilmChannel" />
	<int:channel id="GetOmdbFilmDataChannel" />

	<int-http:outbound-gateway request-channel="GetAllFilmsChannel"
		url="{url}"
		http-method="GET"
		encode-uri="false"
		expected-response-type="model.Film[]">
		<int-http:uri-variable name="url" expression="payload" />
	</int-http:outbound-gateway>

	<int-http:outbound-gateway request-channel="GetAllFilmsOfGenreChannel"
		url="{url}"
		http-method="GET"
		encode-uri="false"
		expected-response-type="model.Film[]">
		<int-http:uri-variable name="url" expression="payload" />
	</int-http:outbound-gateway>

	<int-http:outbound-gateway request-channel="GetAllFilmsOfDirectorChannel"
		url="{url}"
		http-method="GET"
		encode-uri="false"
		expected-response-type="model.Film[]">
		<int-http:uri-variable name="url" expression="payload" />
	</int-http:outbound-gateway>

	<int-http:outbound-gateway request-channel="GetAllFilmsOfActorChannel"
		url="{url}"
		http-method="GET"
		encode-uri="false"
		expected-response-type="model.Film[]">
		<int-http:uri-variable name="url" expression="payload" />
	</int-http:outbound-gateway>

	<int-http:outbound-gateway request-channel="GetAllFilmsBetweenLengthChannel"
		url="{url}"
		http-method="GET"
		encode-uri="false"
		expected-response-type="model.Film[]"
		header-mapper="headerMapperGetFilmsBetweenLength">
		<int-http:uri-variable name="url" expression="payload" />
	</int-http:outbound-gateway>

	<bean id="headerMapperGetFilmsBetweenLength"
		class="org.springframework.integration.http.support.DefaultHttpHeaderMapper">
		<property name="outboundHeaderNames" value="min, max" />
		<property name="userDefinedHeaderPrefix" value="" />
	</bean>

	<int-http:outbound-gateway request-channel="GetFilmDataChannel"
		url="{url}"
		http-method="GET"
		encode-uri="false"
		expected-response-type="model.Film">
		<int-http:uri-variable name="url" expression="payload" />
	</int-http:outbound-gateway>

	<int-http:outbound-gateway request-channel="AddRatingChannel"
		url="{url}"
		http-method="GET"
		encode-uri="false"
		expected-response-type="java.lang.Boolean"
		header-mapper="headerMapperAddRating">
		<int-http:uri-variable name="url" expression="payload" />
	</int-http:outbound-gateway>

	<bean id="headerMapperAddRating"
		class="org.springframework.integration.http.support.DefaultHttpHeaderMapper">
		<property name="outboundHeaderNames" value="opinion" />
		<property name="userDefinedHeaderPrefix" value="" />
	</bean>

	<int-http:outbound-gateway request-channel="GetRatingsOfFilmChannel"
		url="{url}"
		http-method="GET"
		encode-uri="false"
		expected-response-type="model.Rating[]">
		<int-http:uri-variable name="url" expression="payload" />
	</int-http:outbound-gateway>

	<int-http:outbound-gateway request-channel="GetAverageRatingOfFilmChannel"
		url="{url}"
		http-method="GET"
		encode-uri="false"
		expected-response-type="model.Opinion">
		<int-http:uri-variable name="url" expression="payload" />
	</int-http:outbound-gateway>

	<int-http:outbound-gateway request-channel="GetOmdbFilmDataChannel"
		url="{url}"
		http-method="GET"
		encode-uri="false"
		expected-response-type="model.Film">
		<int-http:uri-variable name="url" expression="payload" />
	</int-http:outbound-gateway>

</beans>